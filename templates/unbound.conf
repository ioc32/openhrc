# templated by ansible

{% set ip = interfaces.lan.ip4 | ipv4('host/prefix') %}
server:
{% if dns.rpz.enable %}
    module-config: "respip validator iterator"

{% endif %}
    access-control: 0.0.0.0/0 refuse
    access-control: 127.0.0.0/8 allow
    access-control: ::0/0 refuse
    access-control: ::1 allow
    access-control: {{ ip | ipaddr('network') }}/{{ ip | ipaddr('prefix') }} allow

    interface: {{ ip | ipaddr('address') }}
    #do-ip6: no

    logfile: "unbound.log"
    verbosity: 1
{% if dns.recursive.syslog %}
    use-syslog: yes
{% else %}
    use-syslog: no
{% endif %}
    log-time-ascii: yes
{% if dns.recursive.enable_query_logging %}
    log-queries: yes
{% endif %}

    hide-identity: yes
    hide-version: yes

{% if dns.recursive.enable_dnssec_validation %}
    auto-trust-anchor-file: "/var/unbound/db/root.key"
    val-log-level: 2
{% if dns.recursive.permissive_dnssec_validation %}
    val-permissive-mode: yes
{% endif %}
{% endif %}

    # Inline RRs for {{ dns.authoritative.zone }}
    local-data: '{{ hostname }}.{{ dns.authoritative.zone }}. IN A {{ interfaces.lan.ip4 | ipaddr('address') }}'
{% for entry in dhcp.static_mappings %}
    local-data: '{{ entry.host }}.{{ dns.authoritative.zone }}. IN A {{ entry.ip }}'
{% endfor %}
    local-data: '{{ interfaces.lan.ip4 | ipaddr('revdns') }} IN PTR {{ hostname }}.{{ dns.authoritative.zone }}.'
{% for entry in dhcp.static_mappings %}
    local-data: '{{ entry.ip | ipaddr('revdns') }} IN PTR {{ entry.host }}.{{ dns.authoritative.zone }}.'
{% endfor %}
{% for record in dns.authoritative.records %}
    local-data: '{{ record }}'
{% endfor %}

{% if dns.rpz.enable %}
    rpz:
        name: rpz.home.lan
        zonefile: "/var/unbound/rpz.home.lan.zone"
        rpz-log: yes

{% endif %}
remote-control:
     control-enable: yes
     control-interface: /var/run/unbound.sock

{% if dns.recursive.forwarders %}
forward-zone:
    name: "."
{% for item in dns.recursive.forwarders %}
    forward-addr: {{ item }}
{% endfor %}
{% endif %}
