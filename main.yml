---
  - hosts: all
    gather_facts: no
    vars_files:
      - vars.yml
    tasks:
      - name: configure network intefaces
        template:
          src=templates/hostname.if
          dest=/etc/hostname.{{item.value.iface}}
          owner=root
          group=wheel
          mode=0640
        with_dict: "{{ interfaces }}"

      - name: configure gateway
        template:
          src=templates/mygate
          dest=/etc/mygate
          owner=root
          group=wheel
          mode=0640
        when: interfaces.wan.gateway

      - name: configure gateway (2)
        file:
          path=/etc/mygate
          state=absent
        when: not interfaces.wan.gateway

      - name: setup doas
        template:
          src=templates/doas.conf
          dest=/etc/doas.conf
          mode=0644

      - name: enable OpenHRC services
        service:
          name={{item.name}}
          args="{{ item.args|default('') }}"
          enabled=yes
        with_items: "{{ base_daemons }}"

      - name: enable user services
        service:
          name={{item.name}}
          args="{{item.args|default('')}}"
          enabled={{item.enabled}}
        with_items: "{{ user_daemons }}"

      - name: template /etc files
        template:
          src=templates/{{item}}
          dest=/etc/{{item}}
          mode=0644
          backup=yes
          owner=root
        with_items:
          - ntpd.conf
          - dhcpd.conf
          - sysctl.conf
          - pf.conf
          - myname
          - installurl
          - ethers

      - name: touch /etc/pf-custom.conf
        file:
          owner=root
          mode=0644
          path=/etc/pf-custom.conf
          state=touch
        when: firewall.enable_custom_rules

      - name: template unbound.conf
        template:
          src=templates/unbound.conf
          dest=/var/unbound/etc/unbound.conf
          backup=yes
          owner=_unbound
          group=wheel
          mode=0644

      - name: create crypto material for unbound-control
        command: unbound-control-setup -d /var/unbound/etc/
        args:
          creates: /var/unbound/etc/unbound_server.key

      - name: install upnp service
        openbsd_pkg:
          name=miniupnpd
          state=present
        when: firewall.enable_upnp

      - name: template upnp service configuration file
        template:
          backup=yes
          dest=/etc/miniupnpd.conf
          owner=root
          mode=0644
          src=templates/miniupnpd.conf
        when: firewall.enable_upnp

      - name: enable upnp service
        service:
          name=miniupnpd
          args=""
          enabled={{ "yes" if firewall.enable_upnp else "no" }}

      - name: install ddns service
        openbsd_pkg:
          name=inadyn
          state=present
        when: ddns.enabled

      - name: template ddns configuration file
        template:
          backup=yes
          dest=/etc/inadyn.conf
          owner=root
          mode=0644
          src=templates/inadyn.conf
        when: ddns.enabled

      - name: install user packages
        openbsd_pkg:
          name={{item}}
          state=present
        with_items: "{{ pkgs }}"

      - name: enable ddns service
        service:
          name=inadyn
          args=""
          enabled={{ "yes" if ddns.enabled else "no" }}

      - name: setup pf-badhost script
        block:
          - name: create _pfbadhost user
            user:
              name: _pfbadhost
              shell: /sbin/nologin
              home: /var/empty

          - name: fetch pf-badhost script
            get_url:
              url: https://geoghegan.ca/pub/pf-badhost/0.5/pf-badhost.sh
              dest: /usr/local/bin/pf-badhost
              owner: root
              group: bin
              mode: '0755'
            register: get_url_res

          - name: create pf-badhost logging directory
            file:
              path: /var/log/pf-badhost
              state: directory
              owner: root
              group: wheel
              mode: '0755'

          - name: initialize pf-badhost files
            file:
              path: "{{ item }}"
              state: touch
              owner: _pfbadhost
              group: wheel
              mode: '0640'
            loop:
              - /etc/pf-badhost.txt
              - /var/log/pf-badhost/pf-badhost.log
              - /var/log/pf-badhost/pf-badhost.log.0.gz

          - name: initialize pf-badhost files
            template:
              src: templates/pf-badhost-asns.txt
              dest: /etc/pf-badhost-asns.txt
              owner: _pfbadhost
              group: wheel
              mode: '0640'

          - name: add _pfbadhost crontab
            cron:
              name: daily pfbadhost table update
              user: _pfbadhost
              job: -s pf-badhost -O openbsd -j /etc/pf-badhost-asns.txt
              special_time=daily

          - name: run pfbadhost script
            command:
              cmd: doas -u _pfbadhost pf-badhost -O openbsd -j /etc/pf-badhost-asns.txt
            when: get_url_res.changed

        when: pfbadhost.enabled
